import { Component, Input } from '@angular/core';
import { MatButtonModule } from "@angular/material/button";
import { MatToolbarModule } from "@angular/material/toolbar";
import { MatIconModule } from "@angular/material/icon";
import { CommonModule } from "@angular/common";
import { MatMenuModule } from "@angular/material/menu";
import { RouterLink } from "@angular/router";
import { MatDividerModule } from "@angular/material/divider";
import { BrowserModule } from "@angular/platform-browser";
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/button";
import * as i2 from "@angular/material/toolbar";
import * as i3 from "@angular/material/icon";
import * as i4 from "@angular/common";
import * as i5 from "@angular/material/menu";
import * as i6 from "@angular/material/divider";
export class HeaderComponent {
    constructor() {
        this.title = "";
        this.version = "";
        this.subtitle = "";
        this.splitSubtitleEvenly = false;
        this.showUserManagement = false;
        this.backgroundColor = "#646064";
        this.subtitleInsert = undefined;
    }
    ngOnInit() {
        if (this.splitSubtitleEvenly) {
            this.subtitleInsert = this.splitSubtitle(this.subtitle);
        }
        else {
            this.subtitleInsert = this.subtitle;
        }
    }
    splitSubtitle(subtitle) {
        const subtitleWordList = subtitle.split(" ");
        const halfLength = Math.floor(subtitleWordList.length / 2);
        let recombinedSubtitle = "";
        subtitleWordList.map((word, i) => {
            recombinedSubtitle += word + " ";
            if (i == halfLength) {
                recombinedSubtitle += "<br>";
            }
        });
        return recombinedSubtitle;
    }
    openLink(link) {
        if (link)
            window.open(link, '_blank');
    }
}
HeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: HeaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
HeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.2", type: HeaderComponent, isStandalone: true, selector: "common-header", inputs: { configuration: "configuration", title: "title", version: "version", subtitle: "subtitle", splitSubtitleEvenly: "splitSubtitleEvenly", showUserManagement: "showUserManagement", backgroundColor: "backgroundColor" }, ngImport: i0, template: "<mat-toolbar class=\"header\">\n\n  <mat-toolbar-row [style.background-color]=\"backgroundColor\">\n    <div class=\"title\" [routerLink]=\"'/'\" [style.cursor]=\"'pointer'\">{{ title }}</div>\n\n    <div class=\"subtitle\">\n      <p [innerHTML]=\"subtitleInsert\">\n      </p>\n    </div>\n\n    <div class=\"content-spacer\"></div>\n    <div class=\"version-label\" *ngIf=\"version\">\n      Version: {{ version }}\n    </div>\n    <div *ngIf=\"configuration?.menuItem\">\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Menu\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n    </div>\n    <div>\n      <button mat-icon-button aria-label=\"User Management\" *ngIf=\"showUserManagement\">\n        <mat-icon>account_circle</mat-icon>\n      </button>\n    </div>\n  </mat-toolbar-row>\n\n  <mat-menu #menu=\"matMenu\">\n    <div *ngFor=\"let item of configuration?.menuItem\">\n      <mat-divider *ngIf=\"item.divider\"></mat-divider>\n      <button mat-menu-item *ngIf=\"!item.divider\" (click)=\"openLink(item.link)\">\n        <span>{{ item.label }}</span>\n      </button>\n    </div>\n  </mat-menu>\n</mat-toolbar>\n\n\n\n<!--&lt;!&ndash; Add links to major features as they are implemented here. &ndash;&gt;-->\n\n\n\n\n<!--<mat-menu #menu=\"matMenu\">-->\n<!--  <button mat-menu-item onclick=\"window.open('https://ravendocs.readthedocs.io/en/latest/','_blank')\">-->\n<!--    <span>Documentation</span>-->\n<!--  </button>-->\n<!--  <button mat-menu-item onclick=\"window.open('https://github.com/MortalityReporting','_blank')\">-->\n<!--    <span>Mortality Reporting GitHub</span>-->\n<!--  </button>-->\n<!--  <mat-divider></mat-divider>-->\n<!--  <button mat-menu-item onclick=\"window.open('https://chat.fhir.org','_blank')\">-->\n<!--    <span>FHIR Zulip Chat</span>-->\n<!--  </button>-->\n<!--</mat-menu>-->\n\n", styles: [".title{margin-left:10px}.subtitle{margin-left:30px;font-size:small;width:600px;white-space:normal}.subtitle p{overflow-wrap:break-word;line-height:normal;margin:0}.version-label{font-weight:700;font-size:small;margin:5px}.content-spacer{flex:1 1 auto}.header{background-color:indigo;color:#fff}\n"], dependencies: [{ kind: "ngmodule", type: MatButtonModule }, { kind: "component", type: i1.MatIconButton, selector: "button[mat-icon-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { kind: "ngmodule", type: MatToolbarModule }, { kind: "component", type: i2.MatToolbar, selector: "mat-toolbar", inputs: ["color"], exportAs: ["matToolbar"] }, { kind: "directive", type: i2.MatToolbarRow, selector: "mat-toolbar-row", exportAs: ["matToolbarRow"] }, { kind: "ngmodule", type: MatIconModule }, { kind: "component", type: i3.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "ngmodule", type: MatMenuModule }, { kind: "component", type: i5.MatMenu, selector: "mat-menu", exportAs: ["matMenu"] }, { kind: "component", type: i5.MatMenuItem, selector: "[mat-menu-item]", inputs: ["disabled", "disableRipple", "role"], exportAs: ["matMenuItem"] }, { kind: "directive", type: i5.MatMenuTrigger, selector: "[mat-menu-trigger-for], [matMenuTriggerFor]", exportAs: ["matMenuTrigger"] }, { kind: "directive", type: RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "ngmodule", type: MatDividerModule }, { kind: "component", type: i6.MatDivider, selector: "mat-divider", inputs: ["vertical", "inset"] }, { kind: "ngmodule", type: BrowserModule }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: HeaderComponent, decorators: [{
            type: Component,
            args: [{ standalone: true, imports: [
                        MatButtonModule,
                        MatToolbarModule,
                        MatIconModule,
                        CommonModule,
                        MatMenuModule,
                        RouterLink,
                        MatDividerModule,
                        BrowserModule
                    ], selector: 'common-header', template: "<mat-toolbar class=\"header\">\n\n  <mat-toolbar-row [style.background-color]=\"backgroundColor\">\n    <div class=\"title\" [routerLink]=\"'/'\" [style.cursor]=\"'pointer'\">{{ title }}</div>\n\n    <div class=\"subtitle\">\n      <p [innerHTML]=\"subtitleInsert\">\n      </p>\n    </div>\n\n    <div class=\"content-spacer\"></div>\n    <div class=\"version-label\" *ngIf=\"version\">\n      Version: {{ version }}\n    </div>\n    <div *ngIf=\"configuration?.menuItem\">\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Menu\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n    </div>\n    <div>\n      <button mat-icon-button aria-label=\"User Management\" *ngIf=\"showUserManagement\">\n        <mat-icon>account_circle</mat-icon>\n      </button>\n    </div>\n  </mat-toolbar-row>\n\n  <mat-menu #menu=\"matMenu\">\n    <div *ngFor=\"let item of configuration?.menuItem\">\n      <mat-divider *ngIf=\"item.divider\"></mat-divider>\n      <button mat-menu-item *ngIf=\"!item.divider\" (click)=\"openLink(item.link)\">\n        <span>{{ item.label }}</span>\n      </button>\n    </div>\n  </mat-menu>\n</mat-toolbar>\n\n\n\n<!--&lt;!&ndash; Add links to major features as they are implemented here. &ndash;&gt;-->\n\n\n\n\n<!--<mat-menu #menu=\"matMenu\">-->\n<!--  <button mat-menu-item onclick=\"window.open('https://ravendocs.readthedocs.io/en/latest/','_blank')\">-->\n<!--    <span>Documentation</span>-->\n<!--  </button>-->\n<!--  <button mat-menu-item onclick=\"window.open('https://github.com/MortalityReporting','_blank')\">-->\n<!--    <span>Mortality Reporting GitHub</span>-->\n<!--  </button>-->\n<!--  <mat-divider></mat-divider>-->\n<!--  <button mat-menu-item onclick=\"window.open('https://chat.fhir.org','_blank')\">-->\n<!--    <span>FHIR Zulip Chat</span>-->\n<!--  </button>-->\n<!--</mat-menu>-->\n\n", styles: [".title{margin-left:10px}.subtitle{margin-left:30px;font-size:small;width:600px;white-space:normal}.subtitle p{overflow-wrap:break-word;line-height:normal;margin:0}.version-label{font-weight:700;font-size:small;margin:5px}.content-spacer{flex:1 1 auto}.header{background-color:indigo;color:#fff}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { configuration: [{
                type: Input
            }], title: [{
                type: Input
            }], version: [{
                type: Input
            }], subtitle: [{
                type: Input
            }], splitSubtitleEvenly: [{
                type: Input
            }], showUserManagement: [{
                type: Input
            }], backgroundColor: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvbW1vbi11aS9zcmMvbGliL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29tbW9uLXVpL3NyYy9saWIvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLEtBQUssRUFBUyxNQUFNLGVBQWUsQ0FBQztBQUV2RCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDekQsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sMkJBQTJCLENBQUM7QUFDM0QsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBQ3JELE9BQU8sRUFBQyxZQUFZLEVBQU8sTUFBTSxpQkFBaUIsQ0FBQztBQUNuRCxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sd0JBQXdCLENBQUM7QUFDckQsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzNDLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBQzNELE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQzs7Ozs7Ozs7QUFrQnhELE1BQU0sT0FBTyxlQUFlO0lBVTFCO1FBUlMsVUFBSyxHQUFXLEVBQUUsQ0FBQztRQUNuQixZQUFPLEdBQVcsRUFBRSxDQUFDO1FBQ3JCLGFBQVEsR0FBVyxFQUFFLENBQUM7UUFDdEIsd0JBQW1CLEdBQVksS0FBSyxDQUFDO1FBQ3JDLHVCQUFrQixHQUFZLEtBQUssQ0FBQztRQUNwQyxvQkFBZSxHQUFXLFNBQVMsQ0FBQztRQUM3QyxtQkFBYyxHQUFRLFNBQVMsQ0FBQztJQUVqQixDQUFDO0lBRWhCLFFBQVE7UUFDTixJQUFJLElBQUksQ0FBQyxtQkFBbUIsRUFBRTtZQUM1QixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQ3pEO2FBQ0k7WUFDSCxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7U0FDckM7SUFDSCxDQUFDO0lBRU8sYUFBYSxDQUFDLFFBQWdCO1FBQ3BDLE1BQU0sZ0JBQWdCLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUM3QyxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztRQUMzRCxJQUFJLGtCQUFrQixHQUFHLEVBQUUsQ0FBQztRQUM1QixnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDL0Isa0JBQWtCLElBQUksSUFBSSxHQUFHLEdBQUcsQ0FBQztZQUNqQyxJQUFJLENBQUMsSUFBSSxVQUFVLEVBQUU7Z0JBQ25CLGtCQUFrQixJQUFJLE1BQU0sQ0FBQzthQUM5QjtRQUNILENBQUMsQ0FBQyxDQUFDO1FBQ0gsT0FBTyxrQkFBa0IsQ0FBQTtJQUMzQixDQUFDO0lBRUQsUUFBUSxDQUFDLElBQXdCO1FBQy9CLElBQUksSUFBSTtZQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7OzRHQXBDVSxlQUFlO2dHQUFmLGVBQWUseVNDM0I1QiwyMERBd0RBLGlXRDFDSSxlQUFlLDJMQUNmLGdCQUFnQix5UEFDaEIsYUFBYSxtTEFDYixZQUFZLCtQQUNaLGFBQWEsZ1pBQ2IsVUFBVSwyTkFDVixnQkFBZ0Isa0lBQ2hCLGFBQWE7MkZBTUosZUFBZTtrQkFoQjNCLFNBQVM7aUNBQ0ksSUFBSSxXQUNQO3dCQUNQLGVBQWU7d0JBQ2YsZ0JBQWdCO3dCQUNoQixhQUFhO3dCQUNiLFlBQVk7d0JBQ1osYUFBYTt3QkFDYixVQUFVO3dCQUNWLGdCQUFnQjt3QkFDaEIsYUFBYTtxQkFDZCxZQUNTLGVBQWU7MEVBS2hCLGFBQWE7c0JBQXJCLEtBQUs7Z0JBQ0csS0FBSztzQkFBYixLQUFLO2dCQUNHLE9BQU87c0JBQWYsS0FBSztnQkFDRyxRQUFRO3NCQUFoQixLQUFLO2dCQUNHLG1CQUFtQjtzQkFBM0IsS0FBSztnQkFDRyxrQkFBa0I7c0JBQTFCLEtBQUs7Z0JBQ0csZUFBZTtzQkFBdkIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBJbnB1dCwgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7SGVhZGVyQ29uZmlnfSBmcm9tIFwiLi9oZWFkZXIuY29uZmlnXCI7XG5pbXBvcnQge01hdEJ1dHRvbk1vZHVsZX0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL2J1dHRvblwiO1xuaW1wb3J0IHtNYXRUb29sYmFyTW9kdWxlfSBmcm9tIFwiQGFuZ3VsYXIvbWF0ZXJpYWwvdG9vbGJhclwiO1xuaW1wb3J0IHtNYXRJY29uTW9kdWxlfSBmcm9tIFwiQGFuZ3VsYXIvbWF0ZXJpYWwvaWNvblwiO1xuaW1wb3J0IHtDb21tb25Nb2R1bGUsIE5nSWZ9IGZyb20gXCJAYW5ndWxhci9jb21tb25cIjtcbmltcG9ydCB7TWF0TWVudU1vZHVsZX0gZnJvbSBcIkBhbmd1bGFyL21hdGVyaWFsL21lbnVcIjtcbmltcG9ydCB7Um91dGVyTGlua30gZnJvbSBcIkBhbmd1bGFyL3JvdXRlclwiO1xuaW1wb3J0IHtNYXREaXZpZGVyTW9kdWxlfSBmcm9tIFwiQGFuZ3VsYXIvbWF0ZXJpYWwvZGl2aWRlclwiO1xuaW1wb3J0IHtCcm93c2VyTW9kdWxlfSBmcm9tIFwiQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3NlclwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW1xuICAgIE1hdEJ1dHRvbk1vZHVsZSxcbiAgICBNYXRUb29sYmFyTW9kdWxlLFxuICAgIE1hdEljb25Nb2R1bGUsXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIE1hdE1lbnVNb2R1bGUsXG4gICAgUm91dGVyTGluayxcbiAgICBNYXREaXZpZGVyTW9kdWxlLFxuICAgIEJyb3dzZXJNb2R1bGVcbiAgXSxcbiAgc2VsZWN0b3I6ICdjb21tb24taGVhZGVyJyxcbiAgc3R5bGVVcmxzOiBbJy4vaGVhZGVyLmNvbXBvbmVudC5jc3MnXSxcbiAgdGVtcGxhdGVVcmw6ICdoZWFkZXIuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIEhlYWRlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpIGNvbmZpZ3VyYXRpb246IEhlYWRlckNvbmZpZyB8IHVuZGVmaW5lZDtcbiAgQElucHV0KCkgdGl0bGU6IHN0cmluZyA9IFwiXCI7XG4gIEBJbnB1dCgpIHZlcnNpb246IHN0cmluZyA9IFwiXCI7XG4gIEBJbnB1dCgpIHN1YnRpdGxlOiBzdHJpbmcgPSBcIlwiO1xuICBASW5wdXQoKSBzcGxpdFN1YnRpdGxlRXZlbmx5OiBib29sZWFuID0gZmFsc2U7XG4gIEBJbnB1dCgpIHNob3dVc2VyTWFuYWdlbWVudDogYm9vbGVhbiA9IGZhbHNlO1xuICBASW5wdXQoKSBiYWNrZ3JvdW5kQ29sb3I6IHN0cmluZyA9IFwiIzY0NjA2NFwiO1xuICBzdWJ0aXRsZUluc2VydDogYW55ID0gdW5kZWZpbmVkO1xuXG4gIGNvbnN0cnVjdG9yKCkge31cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5zcGxpdFN1YnRpdGxlRXZlbmx5KSB7XG4gICAgICB0aGlzLnN1YnRpdGxlSW5zZXJ0ID0gdGhpcy5zcGxpdFN1YnRpdGxlKHRoaXMuc3VidGl0bGUpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIHRoaXMuc3VidGl0bGVJbnNlcnQgPSB0aGlzLnN1YnRpdGxlO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgc3BsaXRTdWJ0aXRsZShzdWJ0aXRsZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICBjb25zdCBzdWJ0aXRsZVdvcmRMaXN0ID0gc3VidGl0bGUuc3BsaXQoXCIgXCIpO1xuICAgIGNvbnN0IGhhbGZMZW5ndGggPSBNYXRoLmZsb29yKHN1YnRpdGxlV29yZExpc3QubGVuZ3RoIC8gMik7XG4gICAgbGV0IHJlY29tYmluZWRTdWJ0aXRsZSA9IFwiXCI7XG4gICAgc3VidGl0bGVXb3JkTGlzdC5tYXAoKHdvcmQsIGkpID0+IHtcbiAgICAgIHJlY29tYmluZWRTdWJ0aXRsZSArPSB3b3JkICsgXCIgXCI7XG4gICAgICBpZiAoaSA9PSBoYWxmTGVuZ3RoKSB7XG4gICAgICAgIHJlY29tYmluZWRTdWJ0aXRsZSArPSBcIjxicj5cIjtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gcmVjb21iaW5lZFN1YnRpdGxlXG4gIH1cblxuICBvcGVuTGluayhsaW5rOiBzdHJpbmcgfCB1bmRlZmluZWQpIHtcbiAgICBpZiAobGluaykgd2luZG93Lm9wZW4obGluaywnX2JsYW5rJyk7XG4gIH1cbn1cbiIsIjxtYXQtdG9vbGJhciBjbGFzcz1cImhlYWRlclwiPlxuXG4gIDxtYXQtdG9vbGJhci1yb3cgW3N0eWxlLmJhY2tncm91bmQtY29sb3JdPVwiYmFja2dyb3VuZENvbG9yXCI+XG4gICAgPGRpdiBjbGFzcz1cInRpdGxlXCIgW3JvdXRlckxpbmtdPVwiJy8nXCIgW3N0eWxlLmN1cnNvcl09XCIncG9pbnRlcidcIj57eyB0aXRsZSB9fTwvZGl2PlxuXG4gICAgPGRpdiBjbGFzcz1cInN1YnRpdGxlXCI+XG4gICAgICA8cCBbaW5uZXJIVE1MXT1cInN1YnRpdGxlSW5zZXJ0XCI+XG4gICAgICA8L3A+XG4gICAgPC9kaXY+XG5cbiAgICA8ZGl2IGNsYXNzPVwiY29udGVudC1zcGFjZXJcIj48L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwidmVyc2lvbi1sYWJlbFwiICpuZ0lmPVwidmVyc2lvblwiPlxuICAgICAgVmVyc2lvbjoge3sgdmVyc2lvbiB9fVxuICAgIDwvZGl2PlxuICAgIDxkaXYgKm5nSWY9XCJjb25maWd1cmF0aW9uPy5tZW51SXRlbVwiPlxuICAgICAgPGJ1dHRvbiBtYXQtaWNvbi1idXR0b24gW21hdE1lbnVUcmlnZ2VyRm9yXT1cIm1lbnVcIiBhcmlhLWxhYmVsPVwiTWVudVwiPlxuICAgICAgICA8bWF0LWljb24+bW9yZV92ZXJ0PC9tYXQtaWNvbj5cbiAgICAgIDwvYnV0dG9uPlxuICAgIDwvZGl2PlxuICAgIDxkaXY+XG4gICAgICA8YnV0dG9uIG1hdC1pY29uLWJ1dHRvbiBhcmlhLWxhYmVsPVwiVXNlciBNYW5hZ2VtZW50XCIgKm5nSWY9XCJzaG93VXNlck1hbmFnZW1lbnRcIj5cbiAgICAgICAgPG1hdC1pY29uPmFjY291bnRfY2lyY2xlPC9tYXQtaWNvbj5cbiAgICAgIDwvYnV0dG9uPlxuICAgIDwvZGl2PlxuICA8L21hdC10b29sYmFyLXJvdz5cblxuICA8bWF0LW1lbnUgI21lbnU9XCJtYXRNZW51XCI+XG4gICAgPGRpdiAqbmdGb3I9XCJsZXQgaXRlbSBvZiBjb25maWd1cmF0aW9uPy5tZW51SXRlbVwiPlxuICAgICAgPG1hdC1kaXZpZGVyICpuZ0lmPVwiaXRlbS5kaXZpZGVyXCI+PC9tYXQtZGl2aWRlcj5cbiAgICAgIDxidXR0b24gbWF0LW1lbnUtaXRlbSAqbmdJZj1cIiFpdGVtLmRpdmlkZXJcIiAoY2xpY2spPVwib3BlbkxpbmsoaXRlbS5saW5rKVwiPlxuICAgICAgICA8c3Bhbj57eyBpdGVtLmxhYmVsIH19PC9zcGFuPlxuICAgICAgPC9idXR0b24+XG4gICAgPC9kaXY+XG4gIDwvbWF0LW1lbnU+XG48L21hdC10b29sYmFyPlxuXG5cblxuPCEtLSZsdDshJm5kYXNoOyBBZGQgbGlua3MgdG8gbWFqb3IgZmVhdHVyZXMgYXMgdGhleSBhcmUgaW1wbGVtZW50ZWQgaGVyZS4gJm5kYXNoOyZndDstLT5cblxuXG5cblxuPCEtLTxtYXQtbWVudSAjbWVudT1cIm1hdE1lbnVcIj4tLT5cbjwhLS0gIDxidXR0b24gbWF0LW1lbnUtaXRlbSBvbmNsaWNrPVwid2luZG93Lm9wZW4oJ2h0dHBzOi8vcmF2ZW5kb2NzLnJlYWR0aGVkb2NzLmlvL2VuL2xhdGVzdC8nLCdfYmxhbmsnKVwiPi0tPlxuPCEtLSAgICA8c3Bhbj5Eb2N1bWVudGF0aW9uPC9zcGFuPi0tPlxuPCEtLSAgPC9idXR0b24+LS0+XG48IS0tICA8YnV0dG9uIG1hdC1tZW51LWl0ZW0gb25jbGljaz1cIndpbmRvdy5vcGVuKCdodHRwczovL2dpdGh1Yi5jb20vTW9ydGFsaXR5UmVwb3J0aW5nJywnX2JsYW5rJylcIj4tLT5cbjwhLS0gICAgPHNwYW4+TW9ydGFsaXR5IFJlcG9ydGluZyBHaXRIdWI8L3NwYW4+LS0+XG48IS0tICA8L2J1dHRvbj4tLT5cbjwhLS0gIDxtYXQtZGl2aWRlcj48L21hdC1kaXZpZGVyPi0tPlxuPCEtLSAgPGJ1dHRvbiBtYXQtbWVudS1pdGVtIG9uY2xpY2s9XCJ3aW5kb3cub3BlbignaHR0cHM6Ly9jaGF0LmZoaXIub3JnJywnX2JsYW5rJylcIj4tLT5cbjwhLS0gICAgPHNwYW4+RkhJUiBadWxpcCBDaGF0PC9zcGFuPi0tPlxuPCEtLSAgPC9idXR0b24+LS0+XG48IS0tPC9tYXQtbWVudT4tLT5cblxuIl19