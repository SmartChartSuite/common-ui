{"version":3,"file":"common-ui.mjs","sources":["../../../projects/common-ui/src/lib/common-ui.module.ts","../../../projects/common-ui/src/lib/header/header.component.ts","../../../projects/common-ui/src/lib/header/header.component.html","../../../projects/common-ui/src/lib/nav-menu/nav-menu.component.ts","../../../projects/common-ui/src/lib/nav-menu/nav-menu.component.html","../../../projects/common-ui/src/lib/dialog/confirmation-dialog/conformation-dialog.component.ts","../../../projects/common-ui/src/lib/dialog/confirmation-dialog/confirmation-dialog.component.html","../../../projects/common-ui/src/lib/dialog/text-input-dialog/text-input-dialog.component.ts","../../../projects/common-ui/src/lib/dialog/text-input-dialog/text-input-dialog.component.html","../../../projects/common-ui/src/public-api.ts","../../../projects/common-ui/src/common-ui.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {RouterLink} from \"@angular/router\";\nimport {MatDividerModule} from \"@angular/material/divider\";\nimport {NgIf} from \"@angular/common\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\n\n@NgModule({\n  declarations: [\n  ],\n    imports: [\n        MatIconModule,\n        MatToolbarModule,\n        RouterLink,\n        MatDividerModule,\n        NgIf,\n        BrowserAnimationsModule,\n    ],\n  exports: [\n\n  ]\n})\nexport class CommonUiModule { }\n","import {Component, Input, OnInit} from '@angular/core';\nimport {HeaderConfig} from \"./header.config\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {CommonModule, NgIf} from \"@angular/common\";\nimport {MatMenuModule} from \"@angular/material/menu\";\nimport {RouterLink} from \"@angular/router\";\nimport {MatDividerModule} from \"@angular/material/divider\";\nimport {BrowserModule} from \"@angular/platform-browser\";\n\n@Component({\n  standalone: true,\n  imports: [\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    CommonModule,\n    MatMenuModule,\n    RouterLink,\n    MatDividerModule,\n    BrowserModule\n  ],\n  selector: 'common-header',\n  styleUrls: ['./header.component.css'],\n  templateUrl: 'header.component.html'\n})\nexport class HeaderComponent implements OnInit {\n  @Input() configuration: HeaderConfig | undefined;\n  @Input() title: string = \"\";\n  @Input() version: string = \"\";\n  @Input() subtitle: string = \"\";\n  @Input() splitSubtitleEvenly: boolean = false;\n  @Input() showUserManagement: boolean = false;\n  @Input() backgroundColor: string = \"#646064\";\n  subtitleInsert: any = undefined;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    if (this.splitSubtitleEvenly) {\n      this.subtitleInsert = this.splitSubtitle(this.subtitle);\n    }\n    else {\n      this.subtitleInsert = this.subtitle;\n    }\n  }\n\n  private splitSubtitle(subtitle: string): string {\n    const subtitleWordList = subtitle.split(\" \");\n    const halfLength = Math.floor(subtitleWordList.length / 2);\n    let recombinedSubtitle = \"\";\n    subtitleWordList.map((word, i) => {\n      recombinedSubtitle += word + \" \";\n      if (i == halfLength) {\n        recombinedSubtitle += \"<br>\";\n      }\n    });\n    return recombinedSubtitle\n  }\n\n  openLink(link: string | undefined) {\n    if (link) window.open(link,'_blank');\n  }\n}\n","<mat-toolbar class=\"header\">\n\n  <mat-toolbar-row [style.background-color]=\"backgroundColor\">\n    <div class=\"title\" [routerLink]=\"'/'\" [style.cursor]=\"'pointer'\">{{ title }}</div>\n\n    <div class=\"subtitle\">\n      <p [innerHTML]=\"subtitleInsert\">\n      </p>\n    </div>\n\n    <div class=\"content-spacer\"></div>\n    <div class=\"version-label\" *ngIf=\"version\">\n      Version: {{ version }}\n    </div>\n    <div *ngIf=\"configuration?.menuItem\">\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Menu\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n    </div>\n    <div>\n      <button mat-icon-button aria-label=\"User Management\" *ngIf=\"showUserManagement\">\n        <mat-icon>account_circle</mat-icon>\n      </button>\n    </div>\n  </mat-toolbar-row>\n\n  <mat-menu #menu=\"matMenu\">\n    <div *ngFor=\"let item of configuration?.menuItem\">\n      <mat-divider *ngIf=\"item.divider\"></mat-divider>\n      <button mat-menu-item *ngIf=\"!item.divider\" (click)=\"openLink(item.link)\">\n        <span>{{ item.label }}</span>\n      </button>\n    </div>\n  </mat-menu>\n</mat-toolbar>\n\n\n\n<!--&lt;!&ndash; Add links to major features as they are implemented here. &ndash;&gt;-->\n\n\n\n\n<!--<mat-menu #menu=\"matMenu\">-->\n<!--  <button mat-menu-item onclick=\"window.open('https://ravendocs.readthedocs.io/en/latest/','_blank')\">-->\n<!--    <span>Documentation</span>-->\n<!--  </button>-->\n<!--  <button mat-menu-item onclick=\"window.open('https://github.com/MortalityReporting','_blank')\">-->\n<!--    <span>Mortality Reporting GitHub</span>-->\n<!--  </button>-->\n<!--  <mat-divider></mat-divider>-->\n<!--  <button mat-menu-item onclick=\"window.open('https://chat.fhir.org','_blank')\">-->\n<!--    <span>FHIR Zulip Chat</span>-->\n<!--  </button>-->\n<!--</mat-menu>-->\n\n","import {Component, Input, OnInit} from '@angular/core';\nimport {OptionConfig} from \"./option.config\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\nimport {CommonModule} from \"@angular/common\";\nimport {RouterLink} from \"@angular/router\";\nimport {MatMenuModule} from \"@angular/material/menu\";\n\n@Component({\n  standalone: true,\n    imports: [\n        MatButtonModule,\n        MatIconModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        CommonModule,\n        RouterLink,\n        MatMenuModule\n    ],\n  selector: 'common-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n})\nexport class NavMenuComponent implements OnInit {\n  @Input() backgroundColor: string = \"#646064\";\n  @Input() contrastColor: string = \"white\";\n  @Input() options: OptionConfig = {options: []};\n  expanded: boolean = true;\n  selectedOption = 0;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  toggleSize() {\n    this.expanded = !this.expanded;\n  }\n\n  select(i: any) {\n    this.selectedOption = i;\n  }\n}\n","<div class=\"menu-wrapper\" [style.background-color]=\"backgroundColor\" [style.width]=\"expanded ? '100px' : '50px'\">\n  <mat-toolbar color=primary>\n    <mat-toolbar-row [style.background-color]=\"backgroundColor\" [style.padding]=\"'0 0 0 0'\">\n      <div class=\"menu-button-wrapper\">\n        <button mat-icon-button aria-label=\"Menu\" (click)=\"toggleSize()\">\n          <mat-icon>menu</mat-icon>\n        </button>\n      </div>\n    </mat-toolbar-row>\n  </mat-toolbar>\n\n  <div class=\"vertical-spacer\"></div>\n\n  <div class=\"option-wrapper\"\n       *ngFor=\"let item of options.options; let i = index\"\n       [style.background-color]=\"i === selectedOption ? contrastColor : backgroundColor \"\n       [style.color]=\"i === selectedOption ?  backgroundColor : contrastColor\"\n       (click)=\"select(i)\"\n       matTooltip=\"{{item.label}}\"\n       matTooltipPosition=\"after\"\n       [matTooltipDisabled]=\"expanded\"\n       [routerLink]=\"item.routerLink\"\n  >\n    <mat-icon [class]=\"expanded? 'scaled-icon' : 'small-icon'\" svgIcon=\"{{item.iconName}}\">\n    </mat-icon>\n    <br>\n    <span *ngIf=\"expanded\" class=\"icon-label-large\">{{item.label}}</span>\n  </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogConfig, MatDialogModule, MatDialogRef} from \"@angular/material/dialog\";\nimport {CommonModule} from \"@angular/common\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {DialogData} from \"../domain/dialog-data\";\n\n@Component({\n  selector: 'lib-confirmation-dialog',\n  templateUrl: './confirmation-dialog.component.html',\n  styleUrls: ['./confirmation-dialog.component.css'],\n  standalone: true,\n  imports: [\n    MatDialogModule,\n    MatButtonModule,\n    CommonModule\n  ]\n})\nexport class ConformationDialogComponent implements OnInit {\n\n  data: DialogData = {};\n\n  constructor(\n    private dialogRef: MatDialogRef<any>,\n    @Inject(MAT_DIALOG_DATA) private dialogData: DialogData\n  ) {\n  }\n\n  onSecondaryClick() {\n    this.dialogRef.close('secondaryAction');\n  }\n\n  onDefaultClick() {\n    this.dialogRef.close('primaryAction');\n  }\n\n  ngOnInit(): void {\n    this.data.title = this.dialogData.title ?? \"\";\n    this.data.content = this.dialogData.content ?? \"Do you want to continue?\";\n    this.data.primaryActionBtnTitle = this.dialogData.primaryActionBtnTitle ?? \"Yes\";\n    this.data.secondaryActionBtnTitle = this.dialogData.secondaryActionBtnTitle ?? \"No\";\n    this.data.width = this.dialogData.width ?? '4em';\n    this.data.height = this.dialogData.width ?? '4em';\n    this.data.isPrimaryButtonLeft = this.dialogData.isPrimaryButtonLeft ?? false;\n  }\n}\n\nexport function openConfirmationDialog(dialog: MatDialog, dialogData?: DialogData) {\n\n  const config = new MatDialogConfig();\n\n  config.autoFocus = true;\n  config.width = dialogData?.width\n  config.height = dialogData?.height;\n\n  config.data = {\n    ...dialogData\n  }\n\n  const dialogRef = dialog.open(ConformationDialogComponent, config);\n\n  return dialogRef.afterClosed();\n}\n","<h1 mat-dialog-title>{{data.title}}</h1>\n<div mat-dialog-content>\n  <span [innerHTML]=\"data.content\"></span>\n</div>\n<div mat-dialog-actions align=\"end\">\n  <span *ngIf=\"!data.isPrimaryButtonLeft\">\n    <button mat-stroked-button (click)=\"onSecondaryClick()\">{{data.secondaryActionBtnTitle}}</button>\n    <button mat-stroked-button color=\"primary\" (click)=\"onDefaultClick()\" cdkFocusInitial>{{data.primaryActionBtnTitle}}</button>\n  </span>\n  <span *ngIf=\"data.isPrimaryButtonLeft\">\n    <button mat-stroked-button  (click)=\"onDefaultClick()\" cdkFocusInitial>{{data.primaryActionBtnTitle}}</button>\n    <button mat-stroked-button (click)=\"onSecondaryClick()\">{{data.secondaryActionBtnTitle}}</button>\n  </span>\n</div>\n","import {AfterViewInit, Component, ElementRef, Inject, OnInit, ViewChild} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  AbstractControl,\n  ReactiveFormsModule,\n  UntypedFormControl,\n  UntypedFormGroup,\n  ValidationErrors\n} from \"@angular/forms\";\nimport {MatDialogModule, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig, MatDialog} from \"@angular/material/dialog\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {TextInputDialogData} from \"../domain/text-input-dialog-data\";\n\n\n@Component({\n  selector: 'lib-text-input-dialog',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    CommonModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatDialogModule,\n    MatInputModule\n  ],\n  templateUrl: './text-input-dialog.component.html',\n  styleUrls: ['./text-input-dialog.component.css']\n})\n\nexport class TextInputDialogComponent implements OnInit, AfterViewInit {\n  @ViewChild('textareaElement') textareaElement: ElementRef | undefined;\n  minNumberOfRows = 20;\n\n  ngAfterViewInit() {\n    if (this.textareaElement) {\n      this.autoResizeTextarea(this.textareaElement.nativeElement);\n    }\n  }\n\n  data:  TextInputDialogData= {};\n  dialogForm = new UntypedFormGroup({\n    content: new UntypedFormControl(null)\n  });\n  numRows: number=10;\n\n  constructor(\n    private dialogRef: MatDialogRef<any>,\n    @Inject(MAT_DIALOG_DATA) private dialogData: any\n  ) { }\n\n  onCancel() {\n    this.dialogRef.close();\n    this.dialogForm.reset();\n  }\n\n  onSave() {\n    this.dialogRef.close(this.dialogForm.controls['content'].value);\n    this.dialogForm.reset();\n  }\n\n  ngOnInit(): void {\n\n    this.data.title = this.dialogData.title ?? \"\";\n    this.data.content = this.dialogData.content ?? \"Do you want to continue?\";\n    this.data.primaryActionBtnTitle = this.dialogData.primaryActionBtnTitle ?? \"Yes\";\n    this.data.secondaryActionBtnTitle = this.dialogData.secondaryActionBtnTitle ?? \"No\";\n    this.data.width = this.dialogData.width ?? '4em';\n    this.data.height = this.dialogData.width ?? '4em';\n    this.data.isPrimaryButtonLeft = this.dialogData.isPrimaryButtonLeft ?? false;\n    this.data.inputLabelText = this.dialogData.inputLabelText ?? 'Paste or enter content here';\n\n    if(this.dialogData.content){\n      this.dialogForm.controls['content'].patchValue(this.dialogData.content);\n    }\n\n    if(this.dialogData.formValidators){\n      // Inject the validators\n      this.dialogForm.controls['content'].setValidators(this.dialogData.formValidators);\n      this.dialogForm.controls['content'].updateValueAndValidity();\n      this.data.formValidationTypes = this.dialogData.formValidationTypes\n    }\n\n  }\n\n  onSubmit() {\n    if(this.dialogForm.valid){\n      this.onSave();\n      this.data.validatorErrors = '';\n    }\n    else {\n      this.data.validatorErrors = this.getValidationErrors(this.dialogForm.controls['content'].errors, this.data.formValidationTypes);\n    }\n  }\n\n  getValidationErrors(errors: ValidationErrors | null, errorTypes: any[] | undefined): string {\n    if(!errors || !errorTypes){\n      console.error(\"No errors or error type parameters present.\");\n      return '';\n    }\n    const errorName = Object.keys(errors)[0];\n    const result = errorTypes.find(element => element.name === errorName)?.display;\n    if(result) {\n      return result;\n    }\n    else if(errorName){\n      console.error(\"Unable to find error with name \" + errorName);\n      return \"Validation Error Produced\";\n    }\n    else {\n      console.log(\"The validation did not produce any errors\")\n      return '';\n    }\n  }\n\n  autoResizeTextarea(textarea: HTMLTextAreaElement): void {\n    textarea.style.height = 'auto';\n    let lineHeight = parseInt(getComputedStyle(textarea).lineHeight);\n    let rows = Math.ceil(textarea.scrollHeight / lineHeight);\n    if(rows < this.minNumberOfRows){\n      textarea.rows = this.minNumberOfRows;\n    }\n    else{\n      textarea.rows = rows;\n    }\n\n  }\n}\n\nexport function openTextInputDialog(dialog: MatDialog, dialogData?: TextInputDialogData) {\n\n  const config = new MatDialogConfig();\n\n  config.autoFocus = true;\n  config.width = dialogData?.width ?? \"80%\";\n\n  config.data = {\n    ...dialogData\n  }\n\n  const dialogRef = dialog.open(TextInputDialogComponent, config);\n\n  return dialogRef.afterClosed();\n}\n\nexport function JsonValidator(control: AbstractControl) {\n  if (control.value == null) {\n    return null;\n  }\n  let hasErrors = false;\n  try {\n    JSON.parse(control.value.trim());\n  } catch (e) {\n    hasErrors = true;\n  }\n  if (hasErrors) {\n    return {jsonValidator: true};\n  }\n  return null\n}\n\nexport function ResourceTypeValidator(control: AbstractControl) {\n  if (control.value == null) {\n    return null;\n  }\n\n  let hasErrors = false;\n  let json = null;\n  try {\n    json = JSON.parse(control.value.trim());\n  } catch (e) {\n    hasErrors = true;\n  }\n\n  if (!json?.resourceType) {\n    hasErrors = true;\n  }\n\n  if (hasErrors) {\n    return {resourceTypeValidator: true};\n  }\n  return null\n}\n","\n<h1 mat-dialog-title>{{data.title}}</h1>\n<form [formGroup]=\"dialogForm\" (ngSubmit)=\"onSubmit()\">\n  <div mat-dialog-content>\n    <mat-form-field appearance=\"outline\" style=\"width: 100%\">\n      <mat-label>{{data.inputLabelText}}</mat-label>\n      <textarea type=\"text\" matInput formControlName=\"content\"\n                #textareaElement\n                (input)=\"autoResizeTextarea(textareaElement)\"></textarea>\n      <mat-error>\n        {{ data.validatorErrors }}\n      </mat-error>\n    </mat-form-field>\n  </div>\n  <div mat-dialog-actions align=\"end\">\n    <button type=\"button\" mat-stroked-button (click)=\"onCancel()\" cdkFocusInitial>{{data.secondaryActionBtnTitle}}</button>\n    <button mat-stroked-button type=\"submit\" color=\"primary\" >{{data.primaryActionBtnTitle}}</button>\n  </div>\n</form>\n\n","/*\n * Public API Surface of common-ui\n */\n\nexport * from './lib/common-ui.module';\nexport * from './lib/header/header.config';\nexport * from './lib/header/header.component';\nexport * from './lib/nav-menu/option.config';\nexport * from './lib/nav-menu/nav-menu.component';\nexport * from './lib/dialog/confirmation-dialog/conformation-dialog.component';\nexport * from './lib/dialog/text-input-dialog/text-input-dialog.component';\nexport * from './lib/dialog/domain/dialog-data';\nexport * from './lib/dialog/domain/text-input-dialog-data';\n\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2","i3","i4","i5","i1"],"mappings":"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"}